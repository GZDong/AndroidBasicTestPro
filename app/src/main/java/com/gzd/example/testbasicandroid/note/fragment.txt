1.碎片的生命周期中，和活动相同的流程与活动共同进行，特有的以及加上活动也有的过程，也会发生在活动保持不变，碎片独自运行的时候
2.有关涉及到活动的信息时，要在onActivityCreated里进行操作，比如判断活动拥有几个碎片，不能再onCreateView中操作，因为在这时活动并未完成加载完成
3.碎片的替换和移除，需要用fragmentManager去beginTransaction，获得一个FragmentTransaction，它和数据库一样，需要commit来真正执行，在commit之前也可以
  决定如否用栈来管理碎片，addToBackStack（String des）
4.碎片中如果有列表，最好在碎片中创建列表和适配器，也就是将列表和碎片直接绑定，如果分离，当涉及到该碎片的信息，或者碎片活动的信息时，将不得不污染列表，
  也就是不得不将一些不该属于适配器的属性加入适配器，或者需要创建2或多个适配器
5.横屏不会算作数字限定符，数字限定符特指屏幕的宽，不是视觉上的宽
6.如何做出即兼容手机，又兼容平板的UI呢？首先创建不同的layout文件，里面有主界面的不同layout版本，然后重点就是通过主界面的主碎片，来判断当下
  的主界面是否包含次碎片，如果没有包含，就意味着次碎片在次界面，那就是手机版，那么就需要去启动次界面，信息交由次界面，如果有包含，
  那么就意味着次碎片也在主界面，而且没有次界面，那么就是平面版，那么就不需要启动次界面，信息直接交付给次碎片。关于碎片的具体改动是放在碎片中的，
  活动只负责调用，这样可以让碎片具有通用性，也就是要用对象的思维看待碎片，而不是方法的思维，通过活动去做改变，然后交付信息。